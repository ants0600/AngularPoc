{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Sample Restful API 1.0"
  },
  "host": "localhost:44351",
  "schemes": [
    "http"
  ],
  "paths": {
    "/GetAllCars": {
      "get": {
        "tags": [
          "Car"
        ],
        "summary": "API method to get all cars from database",
        "operationId": "GetAllCars",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Car"
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/GetCarById": {
      "get": {
        "tags": [
          "Car"
        ],
        "summary": "API method get car by id",
        "operationId": "GetCarById",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "searched car id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Car"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/GetCarByName": {
      "get": {
        "tags": [
          "Car"
        ],
        "summary": "API method get car by name",
        "operationId": "GetCarByName",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "searched car name",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Car"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/AddCar": {
      "post": {
        "tags": [
          "Car"
        ],
        "summary": "API method to insert car into database",
        "operationId": "AddCar",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inserted",
            "in": "body",
            "description": "inserted car data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Car"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateCarResponse"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/UpdateCar": {
      "post": {
        "tags": [
          "Car"
        ],
        "summary": "API method to update a specific car by id",
        "operationId": "UpdateCar",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "updated",
            "in": "body",
            "description": "car data to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Car"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateCarResponse"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/DeleteCarByIds": {
      "post": {
        "tags": [
          "Car"
        ],
        "summary": "delete cars by multiple ids",
        "operationId": "DeleteCarByIds",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/CalculateDiscount": {
      "post": {
        "tags": [
          "Car"
        ],
        "summary": "API method to calculate discount of buying a specific car with specific quantity",
        "operationId": "CalculateDiscount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Car purchase data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CalculateDiscountRequest"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CalculateDiscountResponse"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/GetCartItemsByUserName": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "get cart items from database by user name",
        "operationId": "GetCartItemsByUserName",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CartItem"
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/GetCartTotalPriceByUserName": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "get cart total price from database by user name",
        "operationId": "GetCartTotalPriceByUserName",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/AddCartItem": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "insert a cart item to database",
        "operationId": "AddCartItem",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "inserted data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCartItemRequest"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/AddContactUs": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "API method to insert car into database",
        "operationId": "AddContactUs",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inserted",
            "in": "body",
            "description": "inserted car data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactUsItem"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/GetAllProducts": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "get all products from database",
        "operationId": "GetAllProducts",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/GetProductById": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "get all products from database",
        "operationId": "GetProductById",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/Plus": {
      "post": {
        "tags": [
          "SimpleMath"
        ],
        "summary": "Ex: one plus one equals two.\r\n                <br></br>\r\n                Satu tambah satu sama dengan dua.\r\n                <br></br>\r\n                比如： 一加一等于二。",
        "operationId": "Plus",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "a",
            "in": "query",
            "description": "first number",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "b",
            "in": "query",
            "description": "second number",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/Minus": {
      "post": {
        "tags": [
          "SimpleMath"
        ],
        "summary": "Ex: one minus one equals zero.\r\n                <br></br>\r\n                Satu dikurang satu sama dengan dua.\r\n                <br></br>\r\n                比如： 一减一等于零。",
        "operationId": "Minus",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "a",
            "in": "query",
            "description": "first number",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "b",
            "in": "query",
            "description": "second number",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Object": {
      "type": "object"
    },
    "Car": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Year": {
          "format": "int32",
          "type": "integer"
        },
        "Price": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "UpdateCarResponse": {
      "type": "object",
      "properties": {
        "Error": {
          "enum": [
            "None",
            "CarNameNotFound",
            "DuplicateName",
            "CarIdNotFound",
            "CarNameIsEmpty",
            "CarYearIsInvalid",
            "CarPriceIsInvalid",
            "UrlNotReachable",
            "CityNameIsEmpty",
            "CityNotFound"
          ],
          "type": "string",
          "readOnly": true
        },
        "Updated": {
          "$ref": "#/definitions/Car",
          "readOnly": true
        },
        "Status": {
          "type": "boolean",
          "readOnly": true
        },
        "ErrorMessage": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CalculateDiscountRequest": {
      "type": "object",
      "properties": {
        "CarName": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CalculateDiscountResponse": {
      "type": "object",
      "properties": {
        "Discount": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/CalculateDiscountRequest",
          "readOnly": true
        },
        "CarData": {
          "$ref": "#/definitions/Car",
          "readOnly": true
        },
        "AfterDiscount": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "Error": {
          "enum": [
            "None",
            "CarNameNotFound",
            "DuplicateName",
            "CarIdNotFound",
            "CarNameIsEmpty",
            "CarYearIsInvalid",
            "CarPriceIsInvalid",
            "UrlNotReachable",
            "CityNameIsEmpty",
            "CityNotFound"
          ],
          "type": "string",
          "readOnly": true
        },
        "ErrorMessage": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CartItem": {
      "type": "object",
      "properties": {
        "ProductId": {
          "format": "int64",
          "type": "integer"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "TotalPrice": {
          "format": "double",
          "type": "number"
        },
        "Id": {
          "format": "int64",
          "type": "integer"
        },
        "Code": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Price": {
          "format": "double",
          "type": "number"
        },
        "UnitId": {
          "format": "int64",
          "type": "integer"
        },
        "MobileCardImageUrl": {
          "type": "string"
        },
        "UnitName": {
          "type": "string"
        }
      }
    },
    "AddCartItemRequest": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "ProductId": {
          "format": "int64",
          "type": "integer"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ContactUsItem": {
      "type": "object",
      "properties": {
        "Email": {
          "type": "string"
        },
        "FullName": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "type": "integer"
        },
        "Code": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Price": {
          "format": "double",
          "type": "number"
        },
        "UnitId": {
          "format": "int64",
          "type": "integer"
        },
        "MobileCardImageUrl": {
          "type": "string"
        },
        "UnitName": {
          "type": "string"
        }
      }
    }
  }
}